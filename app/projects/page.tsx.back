"use client";
import React, { useState } from 'react';
import { motion, useScroll, useTransform, AnimatePresence } from 'framer-motion';
import { 
  IconCode, 
  IconBrandGithub, 
  IconExternalLink, 
  IconStar,
  IconEye,
  IconGitFork,
  IconCalendar,
  IconUsers,
  IconDeviceMobile,
  IconBrandReact,
  IconBrandNextjs,
  IconBrandTypescript,
  IconBrandTailwind,
  IconChevronDown,
  IconMail,
  IconBrandLinkedin,
  IconBrandTwitter
} from '@tabler/icons-react';

interface Project {
  id: number;
  title: string;
  description: string;
  image: string;
  technologies: string[];
  github: string;
  demo: string;
  stars: number;
  forks: number;
  category: string;
}

interface Stat {
  label: string;
  value: string;
  icon: React.ComponentType<{ size?: number; style?: React.CSSProperties }>;
}

const ProjectShowcase = () => {
  const [selectedProject, setSelectedProject] = useState<Project | null>(null);
  const { scrollYProgress } = useScroll();
  const y = useTransform(scrollYProgress, [0, 1], [0, -50]);
  const opacity = useTransform(scrollYProgress, [0, 0.5, 1], [1, 0.8, 0.6]);

  const projects: Project[] = [
    {
      id: 1,
      title: "AI-Powered Dashboard",
      description: "A comprehensive analytics dashboard with real-time data visualization and machine learning insights.",
      image: "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&h=600&fit=crop",
      technologies: ["React", "TypeScript", "D3.js", "Python"],
      github: "https://github.com",
      demo: "https://demo.com",
      stars: 245,
      forks: 67,
      category: "Web Application"
    },
    {
      id: 2,
      title: "Mobile Task Manager",
      description: "Cross-platform mobile application for team collaboration and project management with real-time sync.",
      image: "https://images.unsplash.com/photo-1611224923853-80b023f02d71?w=800&h=600&fit=crop",
      technologies: ["React Native", "Node.js", "MongoDB", "Socket.io"],
      github: "https://github.com",
      demo: "https://demo.com",
      stars: 189,
      forks: 43,
      category: "Mobile App"
    },
    {
      id: 3,
      title: "E-commerce Platform",
      description: "Full-stack e-commerce solution with payment integration, inventory management, and admin dashboard.",
      image: "https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=800&h=600&fit=crop",
      technologies: ["Next.js", "Stripe", "PostgreSQL", "Prisma"],
      github: "https://github.com",
      demo: "https://demo.com",
      stars: 312,
      forks: 89,
      category: "E-commerce"
    },
    {
      id: 4,
      title: "DevOps Automation Tool",
      description: "Container orchestration and CI/CD pipeline management tool with monitoring capabilities.",
      image: "https://images.unsplash.com/photo-1667372393086-9d4001d51cf1?w=800&h=600&fit=crop",
      technologies: ["Docker", "Kubernetes", "Go", "Grafana"],
      github: "https://github.com",
      demo: "https://demo.com",
      stars: 156,
      forks: 34,
      category: "DevOps"
    }
  ];

  const stats: Stat[] = [
    { label: "Projects Completed", value: "50+", icon: IconCode },
    { label: "GitHub Stars", value: "1.2K+", icon: IconStar },
    { label: "Happy Clients", value: "25+", icon: IconUsers },
    { label: "Years Experience", value: "3+", icon: IconCalendar }
  ];

  return (
    <div className="min-h-screen" style={{ 
      backgroundColor: 'var(--ctp-mocha-base)',
      color: 'var(--ctp-mocha-text)'
    }}>
      {/* CSS Variables */}
      <style jsx global>{`
        :root {
          --ctp-mocha-base: #1e1e2e;
          --ctp-mocha-mantle: #181825;
          --ctp-mocha-surface0: #313244;
          --ctp-mocha-surface1: #45475a;
          --ctp-mocha-surface2: #585b70;
          --ctp-mocha-text: #cdd6f4;
          --ctp-mocha-subtext1: #bac2de;
          --ctp-mocha-subtext0: #a6adc8;
          --ctp-mocha-overlay2: #9399b2;
          --ctp-mocha-overlay1: #7f849c;
          --ctp-mocha-overlay0: #6c7086;
          --ctp-mocha-blue: #89b4fa;
          --ctp-mocha-lavender: #b4befe;
          --ctp-mocha-pink: #f5c2e7;
          --ctp-mocha-red: #f38ba8;
          --ctp-mocha-maroon: #eba0ac;
          --ctp-mocha-peach: #fab387;
          --ctp-mocha-yellow: #f9e2af;
          --ctp-mocha-green: #a6e3a1;
          --ctp-mocha-teal: #94e2d5;
          --ctp-mocha-sky: #89dceb;
          --ctp-mocha-mauve: #cba6f7;
          --ctp-mocha-flamingo: #f2cdcd;
          --ctp-mocha-rosewater: #f5e0dc;
        }
        
        body {
          overflow-x: hidden;
        }
        
        .gradient-text {
          background: linear-gradient(135deg, var(--ctp-mocha-blue), var(--ctp-mocha-mauve), var(--ctp-mocha-pink));
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
          background-clip: text;
        }
        
        .glass-card {
          background: rgba(49, 50, 68, 0.3);
          backdrop-filter: blur(10px);
          border: 1px solid rgba(137, 180, 250, 0.1);
        }
        
        .tech-badge {
          background: linear-gradient(135deg, var(--ctp-mocha-surface1), var(--ctp-mocha-surface2));
          border: 1px solid var(--ctp-mocha-blue);
        }
      `}</style>

      {/* Header */}
      <motion.header 
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        className="fixed top-0 w-full z-50 glass-card"
      >
        <div className="max-w-7xl mx-auto px-6 py-4 flex justify-between items-center">
          <motion.div 
            className="text-2xl font-bold gradient-text"
            whileHover={{ scale: 1.05 }}
          >
            Portfolio
          </motion.div>
          <nav className="hidden md:flex space-x-8">
            {['Projects', 'About', 'Contact'].map((item) => (
              <motion.a
                key={item}
                href={`#${item.toLowerCase()}`}
                className="hover:text-[var(--ctp-mocha-blue)] transition-colors cursor-pointer"
                whileHover={{ y: -2 }}
              >
                {item}
              </motion.a>
            ))}
          </nav>
        </div>
      </motion.header>

      {/* Hero Section */}
      <section className="pt-32 pb-20 px-6">
        <div className="max-w-7xl mx-auto text-center">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h1 className="text-6xl md:text-8xl font-bold mb-6">
              <span className="gradient-text">Creative</span>
              <br />
              Developer
            </h1>
            <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto" style={{ color: 'var(--ctp-mocha-subtext1)' }}>
              Building beautiful, functional, and user-centered digital experiences
            </p>
            <motion.div 
              className="flex flex-col sm:flex-row gap-4 justify-center items-center"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ delay: 0.5 }}
            >
              <motion.button
                className="px-8 py-4 rounded-full font-semibold text-lg transition-all duration-300"
                style={{ 
                  background: 'linear-gradient(135deg, var(--ctp-mocha-blue), var(--ctp-mocha-mauve))',
                  color: 'var(--ctp-mocha-base)'
                }}
                whileHover={{ scale: 1.05, boxShadow: '0 20px 40px rgba(137, 180, 250, 0.3)' }}
                whileTap={{ scale: 0.95 }}
              >
                View My Work
              </motion.button>
              <motion.button
                className="px-8 py-4 rounded-full font-semibold text-lg border-2 transition-all duration-300"
                style={{ 
                  borderColor: 'var(--ctp-mocha-blue)',
                  color: 'var(--ctp-mocha-blue)'
                }}
                whileHover={{ 
                  backgroundColor: 'var(--ctp-mocha-blue)', 
                  color: 'var(--ctp-mocha-base)',
                  scale: 1.05 
                }}
                whileTap={{ scale: 0.95 }}
              >
                Get In Touch
              </motion.button>
            </motion.div>
          </motion.div>
          
          <motion.div
            className="mt-16"
            animate={{ y: [0, -10, 0] }}
            transition={{ duration: 2, repeat: Infinity }}
          >
            <IconChevronDown size={32} style={{ color: 'var(--ctp-mocha-overlay1)' }} />
          </motion.div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-20 px-6" style={{ backgroundColor: 'var(--ctp-mocha-mantle)' }}>
        <div className="max-w-7xl mx-auto">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
            {stats.map((stat, index) => (
              <motion.div
                key={stat.label}
                className="text-center"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1 }}
                viewport={{ once: true }}
              >
                  <motion.div
                    className="inline-flex items-center justify-center w-16 h-16 rounded-full mb-4"
                    style={{ backgroundColor: 'var(--ctp-mocha-surface0)' }}
                    whileHover={{ scale: 1.1, rotate: 360 }}
                    transition={{ duration: 0.3 }}
                  >
                    <stat.icon size={24} style={{ color: 'var(--ctp-mocha-blue)' }} />
                  </motion.div>
                <div className="text-3xl font-bold mb-2 gradient-text">{stat.value}</div>
                <div style={{ color: 'var(--ctp-mocha-subtext1)' }}>{stat.label}</div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Projects Section */}
      <section id="projects" className="py-20 px-6">
        <div className="max-w-7xl mx-auto">
          <motion.div
            className="text-center mb-16"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            <h2 className="text-5xl font-bold mb-6 gradient-text">Featured Projects</h2>
            <p className="text-xl max-w-3xl mx-auto" style={{ color: 'var(--ctp-mocha-subtext1)' }}>
              A showcase of my recent work, ranging from web applications to mobile apps and DevOps tools
            </p>
          </motion.div>

          <div className="grid md:grid-cols-2 gap-8">
            {projects.map((project, index) => (
              <motion.div
                key={project.id}
                className="glass-card rounded-2xl overflow-hidden cursor-pointer"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1 }}
                viewport={{ once: true }}
                whileHover={{ y: -10, scale: 1.02 }}
                onClick={() => setSelectedProject(project)}
              >
                <div className="relative overflow-hidden">
                  <img 
                    src={project.image} 
                    alt={project.title}
                    className="w-full h-48 object-cover transition-transform duration-300 hover:scale-110"
                  />
                  <div className="absolute top-4 left-4">
                    <span 
                      className="px-3 py-1 rounded-full text-sm font-medium"
                      style={{ 
                        backgroundColor: 'var(--ctp-mocha-blue)', 
                        color: 'var(--ctp-mocha-base)' 
                      }}
                    >
                      {project.category}
                    </span>
                  </div>
                </div>
                
                <div className="p-6">
                  <h3 className="text-2xl font-bold mb-3">{project.title}</h3>
                  <p className="mb-4" style={{ color: 'var(--ctp-mocha-subtext1)' }}>
                    {project.description}
                  </p>
                  
                  <div className="flex flex-wrap gap-2 mb-4">
                    {project.technologies.map((tech) => (
                      <span
                        key={tech}
                        className="tech-badge px-3 py-1 rounded-full text-sm"
                      >
                        {tech}
                      </span>
                    ))}
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-4 text-sm" style={{ color: 'var(--ctp-mocha-subtext0)' }}>
                      <div className="flex items-center space-x-1">
                        <IconStar size={16} />
                        <span>{project.stars}</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        <IconGitFork size={16} />
                        <span>{project.forks}</span>
                      </div>
                    </div>
                    
                    <div className="flex space-x-2">
                      <motion.a
                        href={project.github}
                        className="p-2 rounded-full"
                        style={{ backgroundColor: 'var(--ctp-mocha-surface0)' }}
                        whileHover={{ scale: 1.1, backgroundColor: 'var(--ctp-mocha-surface1)' }}
                      >
                        <IconBrandGithub size={20} />
                      </motion.a>
                      <motion.a
                        href={project.demo}
                        className="p-2 rounded-full"
                        style={{ backgroundColor: 'var(--ctp-mocha-blue)' }}
                        whileHover={{ scale: 1.1 }}
                      >
                        <IconExternalLink size={20} style={{ color: 'var(--ctp-mocha-base)' }} />
                      </motion.a>
                    </div>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Contact Section */}
      <section id="contact" className="py-20 px-6" style={{ backgroundColor: 'var(--ctp-mocha-mantle)' }}>
        <div className="max-w-4xl mx-auto text-center">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            <h2 className="text-5xl font-bold mb-6 gradient-text">Let's Work Together</h2>
            <p className="text-xl mb-8" style={{ color: 'var(--ctp-mocha-subtext1)' }}>
              Have a project in mind? Let's discuss how we can bring your ideas to life.
            </p>
            
            <div className="flex justify-center space-x-6 mb-8">
              {[
                { icon: IconMail, href: 'mailto:hello@example.com', color: 'var(--ctp-mocha-red)' },
                { icon: IconBrandLinkedin, href: '#', color: 'var(--ctp-mocha-blue)' },
                { icon: IconBrandTwitter, href: '#', color: 'var(--ctp-mocha-sky)' },
                { icon: IconBrandGithub, href: '#', color: 'var(--ctp-mocha-text)' }
              ].map((social, index) => {
                const IconComponent = social.icon;
                return (
                  <motion.a
                    key={index}
                    href={social.href}
                    className="p-4 rounded-full"
                    style={{ backgroundColor: 'var(--ctp-mocha-surface0)' }}
                    whileHover={{ 
                      scale: 1.1, 
                      backgroundColor: social.color,
                      transition: { duration: 0.2 }
                    }}
                    whileTap={{ scale: 0.9 }}
                  >
                    <IconComponent size={24} />
                  </motion.a>
                );
              })}
            </div>
            
            <motion.button
              className="px-8 py-4 rounded-full font-semibold text-lg"
              style={{ 
                background: 'linear-gradient(135deg, var(--ctp-mocha-green), var(--ctp-mocha-teal))',
                color: 'var(--ctp-mocha-base)'
              }}
              whileHover={{ scale: 1.05, boxShadow: '0 20px 40px rgba(166, 227, 161, 0.3)' }}
              whileTap={{ scale: 0.95 }}
            >
              Start a Conversation
            </motion.button>
          </motion.div>
        </div>
      </section>

      {/* Footer */}
      <footer className="py-8 px-6 border-t" style={{ borderColor: 'var(--ctp-mocha-surface0)' }}>
        <div className="max-w-7xl mx-auto text-center">
          <p style={{ color: 'var(--ctp-mocha-subtext0)' }}>
            © 2024 Your Name. Built with Next.js, Framer Motion, and lots of ☕
          </p>
        </div>
      </footer>

      {/* Project Modal */}
      <AnimatePresence>
        {selectedProject && (
          <motion.div
            className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={() => setSelectedProject(null)}
          >
            <motion.div
              className="glass-card rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto"
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              onClick={(e) => e.stopPropagation()}
            >
              <div className="relative">
                <img 
                  src={selectedProject.image} 
                  alt={selectedProject.title}
                  className="w-full h-64 object-cover"
                />
                <button
                  className="absolute top-4 right-4 p-2 rounded-full"
                  style={{ backgroundColor: 'var(--ctp-mocha-surface0)' }}
                  onClick={() => setSelectedProject(null)}
                >
                  ✕
                </button>
              </div>
              <div className="p-6">
                <h3 className="text-3xl font-bold mb-4">{selectedProject.title}</h3>
                <p className="mb-6" style={{ color: 'var(--ctp-mocha-subtext1)' }}>
                  {selectedProject.description}
                </p>
                <div className="flex flex-wrap gap-2 mb-6">
                  {selectedProject.technologies.map((tech) => (
                    <span
                      key={tech}
                      className="tech-badge px-3 py-2 rounded-full"
                    >
                      {tech}
                    </span>
                  ))}
                </div>
                <div className="flex space-x-4">
                  <motion.a
                    href={selectedProject.github}
                    className="flex-1 py-3 rounded-lg text-center font-semibold border-2 transition-colors"
                    style={{ 
                      borderColor: 'var(--ctp-mocha-blue)',
                      color: 'var(--ctp-mocha-blue)'
                    }}
                    whileHover={{ 
                      backgroundColor: 'var(--ctp-mocha-blue)', 
                      color: 'var(--ctp-mocha-base)' 
                    }}
                  >
                    View Code
                  </motion.a>
                  <motion.a
                    href={selectedProject.demo}
                    className="flex-1 py-3 rounded-lg text-center font-semibold"
                    style={{ 
                      background: 'linear-gradient(135deg, var(--ctp-mocha-blue), var(--ctp-mocha-mauve))',
                      color: 'var(--ctp-mocha-base)'
                    }}
                    whileHover={{ scale: 1.02 }}
                  >
                    Live Demo
                  </motion.a>
                </div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};

export default ProjectShowcase;